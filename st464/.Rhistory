plot.Gam(boston_fit_gma, terms = "ns(nox, 4)")
boston_fit_simp <- lm(dis ~ ns(medv, 4) + ns(age, 4) + nox, data=boston_train)
summary(boston_fit_simp)
boston_fit_simp <- lm(dis ~ ns(medv, 4) + ns(age, 4) + nox, data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
anova(boston_fit_gma, boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
boston_tree <- tree(dis ~ medv, age, nox, data=boston_train)
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(tree)
plot(boston_tree)
text(tree, cex=.5, pretty=0)
text(tree, cex=.5)
text(tree, cex=0.5)
text(tree, cex="0.5")
text(tree, cex=c("0.5"))
text(tree, pretty=0)
text(boston_tree, cex=1, pretty=0)
text(boston_tree, cex=.5, pretty=0)
text(boston_tree, cex=.5, pretty=0)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
?cv.tree
?predict
train_error <- predict(boston_tree, boston_train)
train_error
train_error <- predict(boston_tree, newdata=boston_train)
train_error
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
cv.tree(boston_tree)
cvtree <- cv.tree(boston_tree)
cvtree
plot(dev ~ size, data=cvtree)
plot(dev ~ size, data=as.data.frame(cvtree))
plot(cvtree$size, cvtree$dev)
plot(cvtree$size, cvtree$dev , type="b")
whichmin(cvtree$dev)
w <- which.min(cvtree$dev)
w
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
pruned_tree <- prune.tree(boston_tree, best=w)
text(pruned_tree, cex=.5, pretty=0)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
train_error <- mean((predict(boston_rf, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_rf, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Check train and test MSE for GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- lm(dis ~ ns(medv, 4) + ns(age, 4) + ns(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "ns(medv, 4)")
plot.Gam(boston_fit_gma, terms = "ns(age, 4)")
plot.Gam(boston_fit_gma, terms = "ns(nox, 4)")
# Chunk 5
boston_fit_simp <- lm(dis ~ ns(medv, 4) + ns(age, 4) + nox, data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 6
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 7
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 8
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
train_error <- mean((predict(boston_rf, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_rf, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 9
# Check train and test MSE for GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- lm(dis ~ ns(medv, 4) + ns(age, 4) + ns(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "ns(medv, 4)")
plot.Gam(boston_fit_gma, terms = "ns(age, 4)")
plot.Gam(boston_fit_gma, terms = "ns(nox, 4)")
# Chunk 5
boston_fit_simp <- lm(dis ~ ns(medv, 4) + ns(age, 4) + nox, data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "ns(medv, 4)")
plot.Gam(boston_fit_simp, terms = "ns(age, 4)")
plot.Gam(boston_fit_simp, terms = "nox")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 6
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 7
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 8
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
train_error <- mean((predict(boston_rf, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_rf, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 9
# Check train and test MSE for GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
?gam
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
?gam
?s
?ns
?s
boston_fit_gma <- gam(dis ~ ns(medv, 4) + ns(age, 4) + ns(nox,4), data=boston_train)
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ ns(medv, 4) + ns(age, 4) + ns(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "ns(medv, 4)")
plot.Gam(boston_fit_gma, terms = "ns(age, 4)")
plot.Gam(boston_fit_gma, terms = "ns(nox, 4)")
?s
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "ns(medv, 4)")
plot.Gam(boston_fit_gma, terms = "ns(age, 4)")
plot.Gam(boston_fit_gma, terms = "ns(nox, 4)")
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- lm(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
boston_fit_gma <- gma(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
boston_fit_gma <- gma(dis ~ s(medv, df=4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
boston_fit_gma <- gam(dis ~ s(medv, df=4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
boston_fit_simp <- gam(dis ~ s(medv, 4) + age + s(nox, 4), data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "s(medv, 4)")
plot.Gam(boston_fit_simp, terms = "age")
plot.Gam(boston_fit_simp, terms = "s(nox, 4)")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
# Chunk 5
boston_fit_simp <- gam(dis ~ s(medv, 4) + age + s(nox, 4), data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "s(medv, 4)")
plot.Gam(boston_fit_simp, terms = "age")
plot.Gam(boston_fit_simp, terms = "s(nox, 4)")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 6
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 7
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 8
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
train_error <- mean((predict(boston_rf, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_rf, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 9
# Check training and test MSE for GAM and simplified GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(boston_fit_simp, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_simp, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
# Chunk 5
boston_fit_simp <- gam(dis ~ s(medv, 4) + age + s(nox, 4), data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "s(medv, 4)")
plot.Gam(boston_fit_simp, terms = "age")
plot.Gam(boston_fit_simp, terms = "s(nox, 4)")
anova(boston_fit_gma, boston_fit_simp)
# Check training and test MSE for GAM and simplified GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(boston_fit_simp, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_simp, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
# Chunk 5
boston_fit_simp <- gam(dis ~ s(medv, 4) + age + s(nox, 4), data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "s(medv, 4)")
plot.Gam(boston_fit_simp, terms = "age")
plot.Gam(boston_fit_simp, terms = "s(nox, 4)")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 6
# Check training and test MSE for GAM and simplified GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(boston_fit_simp, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_simp, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 7
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
w
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
cvtree$dev
plot(cvtree$size, cvtree$dev , type="b")
cvtree$size[w]
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- which.min(cvtree$dev)
cvtree$size[w]
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- cvtree$size[which.min(cvtree$dev)]
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4, fig.align = "center")
# Chunk 2
suppressMessages(library(MASS))
suppressMessages(library(randomForest))
suppressMessages(library(gam))
suppressMessages(library(tree))
# Chunk 3
set.seed(123)
s <- sample(nrow(Boston), round(.6*nrow(Boston)))
boston_train <- Boston[s,]
boston_test <- Boston[-s,]
boston_fit_gma <- gam(dis ~ s(medv, 4) + s(age, 4) + s(nox,4), data=boston_train)
summary(boston_fit_gma)
# Chunk 4
plot.Gam(boston_fit_gma, terms = "s(medv, 4)")
plot.Gam(boston_fit_gma, terms = "s(age, 4)")
plot.Gam(boston_fit_gma, terms = "s(nox, 4)")
# Chunk 5
boston_fit_simp <- gam(dis ~ s(medv, 4) + age + s(nox, 4), data=boston_train)
summary(boston_fit_simp)
plot.Gam(boston_fit_simp, terms = "s(medv, 4)")
plot.Gam(boston_fit_simp, terms = "age")
plot.Gam(boston_fit_simp, terms = "s(nox, 4)")
anova(boston_fit_gma, boston_fit_simp)
# Chunk 6
# Check training and test MSE for GAM and simplified GAM
train_error <- mean((predict(boston_fit_gma, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_gma, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(boston_fit_simp, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_fit_simp, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 7
boston_tree <- tree(dis ~ medv + age + nox, data=boston_train)
summary(boston_tree)
plot(boston_tree)
text(boston_tree, cex=.5, pretty=0)
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 8
cvtree <- cv.tree(boston_tree)
cvtree
plot(cvtree$size, cvtree$dev , type="b")
w <- cvtree$size[which.min(cvtree$dev)]
pruned_tree <- prune.tree(boston_tree, best=w)
plot(pruned_tree)
text(pruned_tree, cex=.5, pretty=0)
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
# Chunk 9
boston_rf <- randomForest(dis ~ medv + age + nox, data=boston_train)
train_error <- mean((predict(boston_rf, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_rf, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(boston_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(boston_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
train_error <- mean((predict(pruned_tree, newdata=boston_train) - boston_train$dis)^2)
test_error <- mean((predict(pruned_tree, newdata=boston_test) - boston_test$dis)^2)
train_error
test_error
